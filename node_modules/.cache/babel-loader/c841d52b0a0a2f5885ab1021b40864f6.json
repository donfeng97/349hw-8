{"ast":null,"code":"var _jsxFileName = \"/home/ice/tic/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board';\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isDescending: true\n    };\n  }\n\n  handleClick(i) {\n    const locations = [[1, 1], [2, 1], [3, 1], [1, 2], [2, 2], [3, 2], [1, 3], [2, 3], [3, 3]];\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        location: locations[i]\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  sortHistory() {\n    this.setState({\n      isDescending: !this.state.isDescending\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move + \" @ \" + history[move].location : \"Go to game start\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, move == this.state.stepNumber ? /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 44\n        }\n      }, desc) : desc));\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner.player + \" @ \" + winner.line;\n    } else if (!current.squares.includes(null)) {\n      status = \"draw\";\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      winningSquares: winner ? winner.line : [],\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, this.state.isDescending ? moves : moves.reverse()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.sortHistory(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Sort by: \", this.state.isDescending ? \"Descending\" : \"Asending\")));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        player: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/home/ice/tic/src/components/Game.js"],"names":["React","Component","Board","Game","constructor","props","state","history","squares","Array","fill","stepNumber","xIsNext","isDescending","handleClick","i","locations","slice","current","length","calculateWinner","setState","concat","location","jumpTo","step","sortHistory","render","winner","moves","map","move","desc","status","player","line","includes","reverse","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Board from './Board';\n\nexport default class Game extends Component {\n    constructor(props) {\n      super(props);\n  this.state = {\n    history: [\n      {\n        squares: Array(9).fill(null)\n      }\n    ],\n    stepNumber: 0,\n    xIsNext: true,\n    isDescending: true\n  };\n}\n\nhandleClick(i) {\n  const locations = [\n    [1, 1],\n    [2, 1],\n    [3, 1],\n    [1, 2],\n    [2, 2],\n    [3, 2],\n    [1, 3],\n    [2, 3],\n    [3, 3]\n  ];\n  const history = this.state.history.slice(0, this.state.stepNumber + 1);\n  const current = history[history.length - 1];\n  const squares = current.squares.slice();\n  if (calculateWinner(squares) || squares[i]) {\n    return;\n  }\n  squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n  this.setState({\n    history: history.concat([\n      {\n        squares: squares,\n        location: locations[i]\n      }\n    ]),\n    stepNumber: history.length,\n    xIsNext: !this.state.xIsNext\n  });\n}\n\njumpTo(step) {\n  this.setState({\n    stepNumber: step,\n    xIsNext: step % 2 === 0\n  });\n}\n\nsortHistory() {\n  this.setState({\n    isDescending: !this.state.isDescending\n  });\n}\n\nrender() {\n  const history = this.state.history;\n  const current = history[this.state.stepNumber];\n  const winner = calculateWinner(current.squares);\n\n  const moves = history.map((step, move) => {\n    const desc = move\n      ? \"Go to move #\" + move + \" @ \" + history[move].location\n      : \"Go to game start\";\n    return (\n      <li key={move}>\n        <button onClick={() => this.jumpTo(move)}>\n          {move == this.state.stepNumber ? <b>{desc}</b> : desc}\n        </button>\n      </li>\n    );\n  });\n\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner.player + \" @ \" + winner.line;\n  } else if (!current.squares.includes(null)) {\n    status = \"draw\";\n  } else {\n    status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          winningSquares={winner ? winner.line : []}\n          squares={current.squares}\n          onClick={i => this.handleClick(i)}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <ol>{this.state.isDescending ? moves : moves.reverse()}</ol>\n        <button onClick={() => this.sortHistory()}>\n          Sort by: {this.state.isDescending ? \"Descending\" : \"Asending\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n}\n\nfunction calculateWinner(squares) {\nconst lines = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\nfor (let i = 0; i < lines.length; i++) {\n  const [a, b, c] = lines[i];\n  if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n    return { player: squares[a], line: [a, b, c] };\n  }\n}\nreturn null;\n}\n"]},"metadata":{},"sourceType":"module"}